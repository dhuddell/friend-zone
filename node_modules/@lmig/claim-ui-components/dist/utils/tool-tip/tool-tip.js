'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ToolTip extends _react.Component {
  constructor(props) {
    super(props);
    this.state = { isDisplayed: false };
    this.handleClick = this.handleClick.bind(this);
    this.handleHover = this.handleHover.bind(this);
  }

  handleClick() {
    if (this.props.clickable) {
      this.toggleDisplay();
    }
  }

  handleHover() {
    if (!this.props.clickable) {
      this.toggleDisplay();
    }
  }

  toggleDisplay() {
    this.setState({
      isDisplayed: !this.state.isDisplayed
    });
  }

  render() {
    const displayedClassName = this.state.isDisplayed ? 'tool-tip-content-displayed' : '';
    return _react2.default.createElement(
      'button',
      {
        className: `tool-tip ${displayedClassName} ${this.props.className}`,
        onMouseOver: this.handleHover,
        onMouseOut: this.handleHover,
        onClick: this.handleClick },
      this.props.children
    );
  }
}

exports.default = ToolTip;
ToolTip.propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node,
  clickable: _propTypes2.default.bool
};

ToolTip.defaultProps = {
  clickable: false,
  className: ''
};